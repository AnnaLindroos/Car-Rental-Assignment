@page "/"
@using Car_Rental.Business.Classes
@using Car_Rental.Common.Interfaces
@using Car_Rental.Common.Enums
@inject BookingProcessor bp

<PageTitle>Car Rental Assignment</PageTitle>

<h1>Car Rental Assignment</h1>
<br />


<div class="alert alert-danger mb-4 @((bp.input == null || bp.input.error != string.Empty) ? "opacity-100" : "opacity-0")"><strong>Error</strong> @bp.input.error</div>

<h3>Vehicles</h3>
<div class="row">
    <table class="table border border-dark">
        <thead>
            <tr class="table-dark">
                <td><strong>RegNo</strong></td>
                <td><strong>Make</strong></td>
                <td><strong>Odometer</strong></td>
                <td><strong>Cost Km</strong></td>
                <td><strong>Vehicle Type</strong></td>
                <td><strong>$ Day</strong></td>
                <td><strong>Action</strong></td>
                <td></td>
                <td><strong>Status</strong></td>
            </tr>
        </thead>
        <tbody>
                <tr>
                <td><input @bind="@bp.input.newVehicle.RegNo" type="text" class="form-control border-@(bp.input.isProcessing ? "light-subtle" : "dark")" placeholder="RegNo" disabled="@bp.input.isProcessing" /></td>
                <td><input @bind="@bp.input.newVehicle.Make" type="text" class="form-control border-@(bp.input.isProcessing ? "light-subtle" : "dark")" placeholder="Make" disabled="@bp.input.isProcessing" /></td>
                <td><input @bind="@bp.input.newVehicle.Odometer" type="text" class="form-control border-@(bp.input.isProcessing ? "light-subtle" : "dark")" placeholder="Odometer" disabled="@bp.input.isProcessing" /></td>
                <td><input @bind="@bp.input.newVehicle.CostKm" type="text" class="form-control border-@(bp.input.isProcessing ? "light-subtle" : "dark")" placeholder="CostKm" disabled="@bp.input.isProcessing" /></td>
                <td>
                    <select @bind="@bp.input.newVehicle.VehicleType" class="form-select border-@(bp.input.isProcessing ? "light-subtle" : "dark")" aria-label="Default select example" disabled="@bp.input.isProcessing">
                        @foreach(string vt in bp.VehicleTypeNames)
                        {
                            <option value="@vt">@vt</option>
                        }
                    </select>
                </td>
                <td></td>
                <td><button type="button" class="btn btn-outline-success" @onclick="@(() => bp.AddVehicle())" disabled="@bp.input.isProcessing">Add</button></td>
                <td></td>
                <td><span class="badge rounded-pill text-bg-warning">@(bp.input.isProcessing ? "Processing" : "")</span></td>
                </tr>
                @foreach (var vehicle in bp.GetVehicles())
                {
                    <tr>
                        <td><strong>@vehicle.RegNo</strong></td>
                        <td>@vehicle.Make</td>
                        <td>@vehicle.Odometer</td>
                        <td>@vehicle.CostKm</td>
                        <td>@vehicle.VehicleType</td>
                        <td>@vehicle.CostPerDay</td>
                        @if (vehicle.Status.Equals(VehicleStatuses.Booked))
                        {
                        <td><input @bind="@bp.input.newDistance" type="text" class="form-control border-light-subtle" placeholder="Distance" disabled="@bp.input.isProcessing" /></td>
                        <td><button type="button" class="btn btn-outline-success" @onclick="@(e => bp.ReturnVehicle(vehicle.ID))" disabled="@bp.input.isProcessing">Return</button></td>
                        }
                        else
                        {
                            <td>
                            <select @bind="@bp.input.newCustomer.ID" class="form-select border-@(bp.input.isProcessing ? "light-subtle" : "dark")" aria-label="Default select example" disabled="@bp.input.isProcessing">
                                    @foreach (var person in bp.GetCustomers())
                                    {
                                        <option value="@person.ID">@person.FirstName @person.LastName</option>
                                    }
                                </select>
                            </td>
                        <td><button type="button" class="btn btn-outline-primary" @onclick="@(e => bp.RentVehicle(vehicle.ID))" disabled="@bp.input.isProcessing">Rent</button></td>
                        }
                        <td><span class="badge rounded-pill text-bg-@(vehicle.Status.Equals(VehicleStatuses.Booked) ? "danger" : "dark")"> @vehicle.Status</span></td>
                    </tr>
                }
        </tbody>
    </table>
</div> 

<br />

<h3>Bookings</h3>
<div class="row">
    <table class="table">
        <thead>
            <tr class="border border-dark table-dark">
                <td><strong>RegNo</strong></td>
                <td><strong>Customer</strong></td>
                <td><strong>Km Rented</strong></td>
                <td><strong>Km Returned</strong></td>
                <td><strong>Rented</strong></td>
                <td><strong>Returned</strong></td>
                <td><strong>Cost</strong></td>
                <td><strong>Status</strong></td>
            </tr>
        </thead>
        <tbody>
            @foreach (var booking in bp.GetBookings())
            {
                <tr class="border border-dark">
                    <td><strong>@booking.Vehicle.RegNo</strong></td>
                    <td>@booking.Customer.LastName @booking.Customer.FirstName (@booking.Customer.SSN)</td>
                    <td>@booking.Vehicle.Odometer</td>
                    <td>@booking.KmReturned.ToString()</td>
                    <td>@booking.Rented.ToShortDateString()</td>
                    <td>@booking.Returned?.ToShortDateString()</td>
                    <td>@booking.Cost.ToString()</td>
                    <td><span class="badge text-bg-@(booking.Status.Equals(BookingStatuses.Open) ? "danger" : "success")"> @booking.Status</span></td>
                </tr>
            }
        </tbody>
    </table>
</div>
<br />

<h3>Customers</h3>
<div class="row">
    <table class="table">
        <thead>
            <tr class="border border-dark table-dark">
                <td><strong>SSN</strong></td>
                <td><strong>Last Name</strong></td>
                <td><strong>First Name</strong></td>
                <td></td>
            </tr>
        </thead>
        <tbody>
            <tr class="border border-dark">
                <td><input @bind="@bp.input.newCustomer.SSN" type="text" class="form-control border-dark" placeholder="SSN" /></td>
                <td><input @bind="@bp.input.newCustomer.LastName" type="text" class="form-control border-dark" placeholder="Last Name" /></td>
                <td><input @bind="@bp.input.newCustomer.FirstName" type="text" class="form-control border-dark" placeholder="First Name" /></td>
                <td><button type="button" class="btn btn-outline-success" @onclick="@(() => bp.AddCustomer())">Add</button></td>
            </tr>
            @foreach (var person in bp.GetCustomers())
            {
                <tr class="border border-dark">
                    <td><strong>@person.SSN</strong></td>
                    <td>@person.LastName</td>
                    <td>@person.FirstName</td>
                </tr>
            }
        </tbody>
    </table>
</div>

